{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","placeholder","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"sPAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAIVC,mBAAS,IAJC,mBAIvCC,EAJuC,KAI3BC,EAJ2B,KAmB9C,OAEI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAK,GAAC,OAAMH,GAAN,mBAAoBG,OACnCF,EAAc,OAQd,2BACIM,KAAK,OACLC,MAAOR,EACPS,SAnBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,QAmBfG,YAAY,uBAQ5Bd,EAAYe,WAAa,CACrBd,c,OAAee,EAAUC,KAAKC,Y,2BCnCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,yFAC2EC,UAAUH,GADrF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,oCACA,yBAAKc,UAAU,2CACZ,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAMA,EAAN,QCPEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECEb,SAACA,GAAc,IAAD,EAGZlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IALyB,mBAG/BC,EAH+B,KAGxBC,EAHwB,KA0BtC,OAlBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACDC,YAAW,WACZJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAIR,CAACpB,IAKGqB,ED1BqBM,CAAa3B,GAAjCO,EAF6B,EAE7BA,KAAOa,EAFsB,EAEtBA,QAKf,OACI,oCACI,wCAAcpB,EAAd,KACCoB,GAAW,uCACZ,yBAAKJ,UAAU,aAEVT,EAAKE,KAAI,SAACC,GAAD,OACN,kBAAC,EAAD,eACIkB,IAAKlB,EAAIC,IACLD,UEdfmB,EAAe,SAAAC,GAAU,IAAD,EAGGhD,mBAAS,CAAC,cAHb,mBAG1BiD,EAH0B,KAGdlD,EAHc,KAYrC,OACI,oCACI,4CACA,kBAAC,EAAD,CAAcA,cAAeA,IAC7B,6BAGA,4BAEQkD,EAAWtB,KAAI,SAAAvB,GAAC,OAAI,kBAAC,EAAD,CAAS0C,IAAK1C,EAAGc,SAAUd,U,MCpB/D8C,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.b7996a7e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nexport const AddCategory = ({ setCategories }) => {\n\n\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2){\n            setCategories(e => [ inputValue,...e])\n            setInputValue('');\n        };\n\n    }\n\n    return (\n\n        <form onSubmit={handleSubmit}>\n            <input\n                type='text'\n                value={inputValue}\n                onChange={handleInputChange}\n                placeholder=\"Buscador de Gifs\"\n            />\n        </form>\n\n    )\n\n}\n\nAddCategory.protoTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\n\nexport const getGifs = async (category) => {\n    const url = `http://api.giphy.com/v1/gifs/search?api_key=xvXVK8W1PZnUF6VhNshBz4QocNEMe0dg&q=${encodeURI(category)}&limit=10`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","\nimport React from 'react';\n\n\nexport const GifGridItem = ({id, title, url}) => {\n    \n\n    return (\n        <>\n        <div className=\"card animate__animated animate__bounce \">\n           <img src={ url } alt={ title }/>\n           <p> { title } </p>\n        </div>\n        </>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFecthGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ( {category} ) => {\n\n     const {data , loading}   = useFetchGifs(category);\n\n\n\n\n    return (\n        <>\n            <h3>Gifs de \"{category}\"</h3>\n            {loading && <p>Cargando</p>}\n            <div className=\"card-grid\">\n\n                {data.map((img) => (\n                    <GifGridItem\n                        key={img.id}\n                        {...img} />\n                )\n                )}\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\n\n\nexport const useFetchGifs = (category) => {\n   \n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => {\n                 setTimeout(() => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            }, 2000)//\n\n        })\n\n    }, [category])\n\n\n\n\n    return state; // { data:[], loading: true };\n\n\n}\n\n\n\n\n\n// export const useFecthGifs = (category) => {\n\n//     const [state, setState] = useState({\n//         data: [],\n//         loading: true\n//     });\n\n//     userEffect(() => {\n//         getGifs(category)\n//             .then(imgs => {\n//                 setTimeout(() => {\n//                     setState({\n//                         data: imgs,\n//                         loading: false\n//                     })\n//                 }, 3000)\n//             }, [category])\n\n//         return state\n\n//     })\n// }","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n// import PropTypes from 'prop-types'\n\nexport const GifExpertApp = props => {\n\n\n    const [categories, setCategories] = useState(['One Punch']);//, 'Samurai X', 'Drangon Ball'\n\n    // const handleAdd = () => { setCategories([...categories,'Avatar'] )}\n    // const handleAdd = () => { setCategories(['Avatar',...categories] )}\n    // const handleAdd = () => { setCategories(e =>[...e, 'HunterXHunter'] )}\n    \n\n\n\nreturn (\n    <>\n        <h1>GifExpertApp</h1>\n        <AddCategory  setCategories={setCategories}/>\n        <hr />\n        {/* <button onClick={ handleAdd }>Agregar</button> */}\n\n        <ol>\n            {\n                categories.map(e => <GifGrid key={e} category={e} />)\n            }\n        </ol>\n    </>\n)\n\n\n        }\n\n","import 'animate.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}